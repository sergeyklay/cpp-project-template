# Copyright 2020 Serghei Iakovlev <egrep@protonmail.ch>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Defines the Stars style for automatic reformatting.
#
# Please seek consensus from the Serghei Iakovlev before
# modifying this file.
#
# See also:
#   http://clang.llvm.org/docs/ClangFormatStyleOptions.html
#   https://google.github.io/styleguide/cppguide.html#
#
# To compare these settings with all available clang-format options:
# diff <(clang-format -dump-config | grep -Ev '^$|^( |BraceWrapping|IncludeCategories)' | sed -Ee 's/: +/: /g' | sort) <(cat .clang-format | grep -Ev '^$|^#' | sort)
#
---
DisableFormat: false
Language: Cpp
Standard: c++17

# Indentation & whitespace
AccessModifierOffset: -1
ColumnLimit: 80
ConstructorInitializerIndentWidth: 4
ContinuationIndentWidth: 4
IndentCaseLabels: true
IndentWidth: 2
IndentWrappedFunctionNames: false
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
SpacesBeforeTrailingComments: 2
TabWidth: 8
UseTab: Never

# Spacing style
Cpp11BracedListStyle: true
DerivePointerAlignment: true
PointerAlignment: Left
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeParens: ControlStatements
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeRangeBasedForLoopColon: true

# Comments
AlignTrailingComments: true
CommentPragmas: '^ IWYU pragma:'
FixNamespaceComments: true
ReflowComments:  true

# Pattern-based special behavior
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
IncludeCategories:
  - Regex:    '^<.*\.h>'
    Priority: 1
  - Regex:    '^<.*\.hpp>'
    Priority: 3
  - Regex:    '^<.*'
    Priority: 2
  - Regex:    '.*'
    Priority: 4
MacroBlockBegin: ''
MacroBlockEnd: ''
SortUsingDeclarations: true
SortIncludes: true
IncludeBlocks: Regroup
IncludeIsMainRegex: '([-_](test|unittest))?$'
CompactNamespaces: false

# Alignment & breaking
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Left
AlignOperands: true
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortFunctionsOnASingleLine: All
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLoopsOnASingleLine: true
AlwaysBreakAfterReturnType: None
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: true
BinPackParameters: true
ExperimentalAutoDetectBinPacking: false
BreakBeforeBinaryOperators: None
BreakBeforeBraces: Attach
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: true
BreakConstructorInitializersBeforeComma: false
BreakStringLiterals: true
ConstructorInitializerAllOnOneLineOrOnePerLine: true
BreakInheritanceList: BeforeColon
BreakConstructorInitializers: BeforeColon
BreakAfterJavaFieldAnnotations: false
BraceWrapping:
  AfterCaseLabel:        false
  AfterClass:            false
  AfterControlStatement: Never
  AfterEnum:             false
  AfterFunction:         false
  AfterNamespace:        false
  AfterObjCDeclaration:  false
  AfterStruct:           false
  AfterUnion:            false
  AfterExternBlock:      false
  BeforeCatch:           false
  BeforeElse:            false
  IndentBraces:          false
  SplitEmptyFunction:    true
  SplitEmptyRecord:      true
  SplitEmptyNamespace:   true
...
