# Copyright 2020 Serghei Iakovlev <egrep@protonmail.ch>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: analysis

on:
  pull_request:
    branches:
      - master
      - development
  push:

jobs:
  code_style:
    # To prevent build a particular commit use
    #     git commit -m "......... [ci skip]"
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    name: analysis
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Common Prerequisites
        run: |
          # Prune unneeded ppas
          bash .ci/prune-ppas.sh

          # Add more toolchains
          echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key| sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main" --yes
          sudo apt-get update --quiet --yes 1>/dev/null

          # Install clang tools
          sudo apt-get install --no-install-recommends -q -y clang-format-10

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64

      - name: Get PIP Cache Key
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; \
            print('::set-output name=dir::' + USER_CACHE_DIR)"

      - name: Setup pip Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run C++ Coding Style Check
        if: always()
        run: |
          /usr/lib/llvm-10/bin/clang-format --version

          /usr/lib/llvm-10/bin/clang-format -i $(find ./src -name '*.[hc]pp')
          /usr/lib/llvm-10/bin/clang-format -i $(find ./include -name '*.[hc]pp')
          git diff --exit-code

      - name: Run Cpplint Check
        if: always()
        run: cpplint --counting=detailed --recursive src include

      - name: Run Shell Check
        if: always()
        run: shellcheck .ci/*.sh
