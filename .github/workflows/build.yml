# This file is part of the Repository Templates for C++ Projects.
#
# (c) Serghei Iakovlev <egrep@protonmail.ch>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
    pull_request:
      branches:
        - master

jobs:
  simple_build:

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        name:
          - linux-gcc-7
          - linux-clang-5.0
          # - macOS-latest

        include:
          - name: linux-gcc-7
            os: ubuntu-18.04
            compiler: gcc
            libcxx: libstdc++11
            version: '7'

          - name: linux-clang-5.0
            os: ubuntu-18.04
            compiler: clang
            libcxx: libstdc++11
            version: '5.0'

#          - name: macOS-latest
#            os: macOS-latest
#            compiler: apple-clang
#            libcxx: libc++
#            version: '11.0'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Setup Prerequisites (Linux)
        if: startsWith(runner.os, 'Linux')
        run: |
          # We don't need this at all, and our
          # builds often fails because Microsoft
          # servers are unstable or even offline.
          # sudo rm -f /etc/apt/sources.list.d/dotnetdev.list
          # sudo rm -f /etc/apt/sources.list.d/azure*.list
          ls -1 /etc/apt/sources.list.d/

          #echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
          #sudo add-apt-repository ppa:ubuntu-toolchain-r/test --yes
          #sudo apt-get update --quiet --yes 1>/dev/null

          # Install compiler
          source .ci/install-compiler-ubuntu.sh \
            "${{ matrix.compiler }}" "${{ matrix.version }}"

      - name: Configure x64 Debug
        run: |
          $CC --version
          cmake --version
