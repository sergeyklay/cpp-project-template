# This file is part of the Repository Templates for C++ Projects.
#
# (c) Serghei Iakovlev <egrep@protonmail.ch>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.txt'
    pull_request:
      branches:
        - master
        - development

jobs:
  simple_build:

    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        toolchain:
          - linux-gcc-7
          - linux-clang-5.0
          - macOS-latest

        include:
          - toolchain: linux-gcc-7
            os: ubuntu-18.04
            compiler: gcc
            libcxx: libstdc++11
            version: '7'

          - toolchain: linux-clang-5.0
            os: ubuntu-18.04
            compiler: clang
            libcxx: libstdc++11
            version: '5.0'

          - toolchain: macOS-latest
            os: macOS-latest
            compiler: apple-clang
            libcxx: libc++
            version: '11.0'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Setup Prerequisites (Linux)
        if: startsWith(runner.os, 'Linux')
        run: |
          # Prune unneeded ppas
          bash "$GITHUB_WORKSPACE/.ci/prune-ppas.sh"

          # Add more toolchains
          echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test --yes
          sudo apt-get update --quiet --yes 1>/dev/null

          # Install compiler
          source "$GITHUB_WORKSPACE/.ci/install-compiler-ubuntu.sh" \
            "${{ matrix.compiler }}" "${{ matrix.version }}"

      - name: Setup Prerequisites (macOS)
        if: startsWith(runner.os, 'macOS')
        run: |
          sudo xcode-select -switch /Applications/Xcode.app

          echo "::set-env name=CC::$(xcrun -f clang)"
          echo "::set-env name=CXX::$(xcrun -f clang++)"
          echo "::set-env name=SDKROOT::$(xcodebuild -version -sdk macosx Path)"
          echo "::set-env name=PATH::$(dirname $(xcrun -f clang)):$PATH"

      - name: Configure x64 Debug
        run: |
          $CC --version
          cmake --version

          pushd cmake-sqlite-conan

          cmake \
            -S . \
            -Bbuild \
            -DCMAKE_BUILD_TYPE=Debug

          popd

      - name: Build with ${{ matrix.compiler }}
        run: |
          pushd cmake-sqlite-conan
          cmake --build build -j "$(getconf _NPROCESSORS_ONLN)"
          popd

      - name: Success Reporting
        if: success()
        run: git log --format=fuller -5
